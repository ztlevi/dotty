#!/usr/bin/env zsh
###############################################################################
#                               License inventory                             #
###############################################################################

source ${0:A:h}/../../deploy

install() {
  brew install jq yq fastfetch vivid
  case $(_os) in
    linux-arch)
      yay --needed --noconfirm -S alacritty
      ;;
    linux-RHEL)
      # TODO
      ;;
    linux-debian)
      # For Ubuntu 18 and over
      # sudo add-apt-repository ppa:mmstick76/alacritty
      # sudo apt-get update
      # sudo apt install alacritty

      # Install the Rust compiler with rustup
      ! topic-enabled-p dev/rust && dotty dev/rust

      rustup override set stable
      rustup update stable

      tempdir=/tmp/temp-install
      (
        ALACRITTY_VERSION=0.5.0
        mkdir -p $tempdir
        cd $tempdir
        APT_INSTALL cmake pkg-config libfreetype6-dev libfontconfig1-dev libxcb-xfixes0-dev python3
        wget https://github.com/alacritty/alacritty/archive/v${ALACRITTY_VERSION}.tar.gz -O alacritty.tar.gz
        tar xvf alacritty.tar.gz
        cd alacritty-*
        cargo build --release
        sudo cp -f target/release/alacritty /usr/local/bin
        rm -rf $tempdir/alacritty-*
      )
      ;;
    macos)
      brew install --cask alacritty
      ;;
  esac
}

# update() {}

link() {
  rm -rf ~/.zinit/snippets/*.config--dotty--config--shell--alacritty >/dev/null
  mkdir -p $XDG_CONFIG_HOME/alacritty
  config_file=$XDG_CONFIG_HOME/alacritty/alacritty-temp.yml
  if [[ $DOTTY_THEME == "light" ]]; then
    theme_file=${ALACRITTY_THEME:-theme-acario-light.yml}
  else
    theme_file=${ALACRITTY_THEME:-theme-city-lights.yml}
  fi
  if [[ -d "$DOTTY_ASSETS_HOME" ]]; then
    font_file=${ALACRITTY_FONT:-font-ubuntu-mono.yml}
  else
    font_file=${ALACRITTY_FONT:-font-mononoki.yml}
  fi
  private_file=private.yml
  (
    cd $DOTTY_CONFIG_HOME/shell/alacritty/config/alacritty
    local config_files=(basic.yml ${font_file} keybinding.yml ${theme_file})
    [[ $(_os) == "macos" ]] && config_files+=(macos.yml)

    [[ -f ${private_file} ]] && config_files+=(${private_file})

    function string_join() {
      local IFS="$1"
      shift
      echo "$*"
    }
    local select_expression=()
    for i in {0..$((${#config_files} - 1))}; do
      select_expression+=(" select(fi == $i) ")
    done
    local yq_expression=$(string_join "*" "${select_expression[@]}")

    yq eval-all $yq_expression ${config_files[@]} >$config_file
  )
  if [[ $(_os) == "macos" ]]; then
    # Increase macos font size
    # I have a 2K monitor which doesn't support scaling :(
    # get the main monitor resolution
    local width=$(fastfetch -s display --format json | jq -r '.[] | .result[] | select(.primary == true) | .scaled.width')
    local add_num=0
    if [[ $width -ge '2560' ]]; then
      add_num=2
    fi
    local increased_font_size=$(($(yq eval '.font.size' $config_file) + $add_num))
    yq eval ".font.size = $increased_font_size" $config_file --inplace
  fi
  mv -f $config_file $XDG_CONFIG_HOME/alacritty/alacritty.yml
  rm -f $XDG_CONFIG_HOME/alacritty/alacritty.toml
  alacritty migrate
}

clean() {
  rm -rf $XDG_CONFIG_HOME/alacritty
}

init "$@"
